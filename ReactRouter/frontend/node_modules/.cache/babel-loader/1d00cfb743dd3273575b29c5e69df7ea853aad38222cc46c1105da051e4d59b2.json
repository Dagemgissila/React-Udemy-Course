{"ast":null,"code":"var _jsxFileName = \"/home/dagi/udemy/ReactJs/React-Udemy-Course/ReactRouter/frontend/src/components/EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLoaderData } from \"react-router\";\nimport Eventitem from \"./EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const event = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Eventitem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"f+CY/h38cRQOxw9KpH9VFCtzaWo=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not fetch the eventdetail\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useLoaderData","Eventitem","jsxDEV","_jsxDEV","EventDetailPage","_s","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["/home/dagi/udemy/ReactJs/React-Udemy-Course/ReactRouter/frontend/src/components/EventDetailPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLoaderData } from \"react-router\";\nimport Eventitem from \"./EventItem\";\nconst EventDetailPage = () => {\n  const event = useLoaderData();\n  return <Eventitem />;\n};\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n\n  if (!response.ok) {\n    throw new Response(\n      JSON.stringify({ message: \"could not fetch the eventdetail\" }),\n      { status: 500 }\n    );\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n\nexport default EventDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,KAAK,GAAGN,aAAa,CAAC,CAAC;EAC7B,oBAAOG,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACL,EAAA,CAHID,eAAe;EAAA,QACLJ,aAAa;AAAA;AAAAW,EAAA,GADvBP,eAAe;AAKrB,OAAO,eAAeQ,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGH,EAAE,CAAC;EAEjE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAkC,CAAC,CAAC,EAC9D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO;EAChB;AACF;AAEA,eAAerB,eAAe;AAAC,IAAAO,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}