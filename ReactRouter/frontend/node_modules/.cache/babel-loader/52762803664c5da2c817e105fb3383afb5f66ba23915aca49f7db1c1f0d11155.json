{"ast":null,"code":"var _jsxFileName = \"/home/dagi/udemy/ReactJs/React-Udemy-Course/ReactRouter/frontend/src/Events.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router\";\nimport EventsList from \"./components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/eventsd\");\n  if (!response.ok) {\n    return json({\n      message: \"Could not fetch the events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","json","message","status","resData","$RefreshReg$"],"sources":["/home/dagi/udemy/ReactJs/React-Udemy-Course/ReactRouter/frontend/src/Events.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router\";\nimport EventsList from \"./components/EventsList\";\nfunction EventsPage() {\n  const events = useLoaderData();\n  return <>{<EventsList events={events} />}</>;\n}\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/eventsd\");\n\n  if (!response.ok) {\n    return json({ message: \"Could not fetch the events\" }, { status: 500 });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAC9B,oBAAOG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAAGN,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAAG,CAAC;AAC9C;AAACN,EAAA,CAHQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAc,EAAA,GADrBR,UAAU;AAKnB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA6B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzE,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMN,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC,OAAOG,OAAO,CAACd,MAAM;EACvB;AACF;AAEA,eAAeF,UAAU;AAAC,IAAAQ,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}